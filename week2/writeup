# sales.quoccabank.com
this problem was solved by inspector in burpsuite, which automatically decoded base64 encoded headers in the http request when i closely examined the requests


# blog.quoccabank.com

recon

I brute force enumerated the attatchment_ids in the url, obtaining 12/100 successful web-pages
1 more than the said amount

accessing .hta gave a forbidden page
but gave me the information that the server is a Apache/2.4.38(debian) server served on port 80



flag-1
this flag was obtained by inspecting elements with chrome dev-tools

flag-2
upon further inspecting of the flag i realised that the website sources a lot of images from the path blog.quoccabank/wp-includes/ which indicated that there might be a hidden wp-admin/ path that could be explored (especially since this is an access authorisation challenge)
and obviously i tried the password admin admin and it worked.


possible methods of further attacking:

password enumeration 
path enumeration
cookie enumeration

https://blog.quoccabank.com/wp-admin/about.php





# files.quoccabank.com
there seems to be a xss vulnerability in the files
the cookies stored are in JWT format

attack vectors:
- xss?
- credential enumeration
- jwt


enumerated as a valid path
https://files.quoccabank.com/admin
brute force this?


error code 420 enhance ur clam


flag-1
brute forcing the /admin pin using a python script and checking content length
grepping the results pin 1024






# notes.quoccabank.com
change cookie to admin@quoccabank.com
because the jwt was not authenticated with the server.






